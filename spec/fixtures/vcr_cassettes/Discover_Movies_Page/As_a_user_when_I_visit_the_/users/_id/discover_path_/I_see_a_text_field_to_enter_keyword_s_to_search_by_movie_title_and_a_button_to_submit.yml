---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?query=Lion
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer tmdb_key
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 23 May 2023 16:30:31 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=24752
      X-Memc:
      - HIT
      X-Memc-Key:
      - 065564e93602723929226d1cf811f192
      X-Memc-Age:
      - '13250'
      X-Memc-Expires:
      - '15464'
      Etag:
      - W/"0bc90b0990bf135ec8a527c9e6504ba5"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 fdb71c154448c5637ac452d623bb2ad6.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - K70kpR9e7qHb4MIxukZiZnRPgYMfSD8ID1NpmYE_nTE8r4xC57Ix2g==
      Age:
      - '1172'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 23 May 2023 16:50:04 GMT
recorded_with: VCR 6.1.0

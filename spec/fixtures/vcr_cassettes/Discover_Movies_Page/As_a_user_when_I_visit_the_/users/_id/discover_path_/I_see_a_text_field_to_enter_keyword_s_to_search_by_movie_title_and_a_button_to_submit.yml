---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?query=Lion
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer tmdb_key
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 22 May 2023 20:08:07 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=23690
      X-Memc:
      - HIT
      X-Memc-Key:
      - 065564e93602723929226d1cf811f192
      X-Memc-Age:
      - '11638'
      X-Memc-Expires:
      - '13003'
      Etag:
      - W/"b9de41cdf1d5a80bf3e098d1ae4ce810"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 89657e9ba87ccb5f5b96de064bf6d496.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - yKh7uy9iwGn0K0n_SaIRIpjzmeUgwI3B5rs4uWRNSnaS1FiSgjiKCQ==
      Age:
      - '1767'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 22 May 2023 20:37:34 GMT
recorded_with: VCR 6.1.0

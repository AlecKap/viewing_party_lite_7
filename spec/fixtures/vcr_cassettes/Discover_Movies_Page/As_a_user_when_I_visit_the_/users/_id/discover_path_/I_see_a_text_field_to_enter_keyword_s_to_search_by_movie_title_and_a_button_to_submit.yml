---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?query=Lion
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer tmdb_key
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 13 May 2023 17:24:31 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=22643
      X-Memc:
      - HIT
      X-Memc-Key:
      - 065564e93602723929226d1cf811f192
      X-Memc-Age:
      - '14087'
      X-Memc-Expires:
      - '9493'
      Etag:
      - W/"8a6685c888fec904a79e306ee7752b57"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 4a3448a83573e51d340356257951f57a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - "-ogXVIxVvLtwKZFXb7jf0U-kSRpn6NH5dH5DOe8dEj-UH0FGGVMn1w=="
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 13 May 2023 17:24:31 GMT
recorded_with: VCR 6.1.0
